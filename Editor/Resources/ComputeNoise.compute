#pragma kernel NoiseKernel2D 
#pragma kernel NoiseKernel3D 

#include "Packages/com.eldnach.noisekit/Editor/Resources/NoiseKit.hlsl" 

RWTexture2D<float4> _outputTex2D; 
RWTexture3D<float4> _outputTex3D; 

StructuredBuffer<float> _propsBuffer0;

StructuredBuffer<float> _curveBuffer0;


float4 _res; 

[numthreads(8,8,1)] 
void NoiseKernel2D (uint3 id : SV_DispatchThreadID) 
{ 
float2 uv = id.xy / _res.xy; 
float Noise_0 = valueNoise2D(uv * 4, float2(_propsBuffer0[0], _propsBuffer0[0] / 2.71828), float2(4, 4), _curveBuffer0[0], _curveBuffer0[1], _curveBuffer0[2]);
float r = Noise_0;
float g = Noise_0;
float b = Noise_0;
float a = Noise_0;
_outputTex2D[id.xy] = float4(r, g, b, a);} 
[numthreads(8,8,8)] 
void NoiseKernel3D (uint3 id : SV_DispatchThreadID) 
{ 
float3 uv = id.xyz / _res.xyz; 
float Noise_0 = valueNoise3D(uv * 4, float3(_propsBuffer0[0], _propsBuffer0[0] / 2.71828, _propsBuffer0[0] * 5.71828), float3(4, 4, 4), _curveBuffer0[0], _curveBuffer0[1], _curveBuffer0[2]);
float r = Noise_0;
float g = Noise_0;
float b = Noise_0;
float a = Noise_0;
_outputTex3D[id.xyz] = float4(r, g, b, a);} 
